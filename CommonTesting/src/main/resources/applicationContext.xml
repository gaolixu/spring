<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:util="http://www.springframework.org/schema/util"  
       xmlns:jee="http://www.springframework.org/schema/jee"  
       xmlns:task="http://www.springframework.org/schema/task"  
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd   
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">  
  
    <!-- <aop:aspectj-autoproxy/> -->
    <!-- 
    <bean id="executorService" class="java.util.concurrent.Executors"    factory-method="newFixedThreadPool">
        <constructor-arg value="10" /> 
    </bean>
    
    <task:executor id="threadPoolTaskExecutor" pool-size="10" />
     -->
    
    <bean id="AsyncTest" class="com.intervalintl.test.AsyncTest">
   </bean> 
    <!-- proxy-target-class="true" eliminates java.lang.ClassCastException: $Proxy13 cannot be cast to" but not allowed i. spring 3.0.3. -->   
    <!-- <task:annotation-driven executor="executorService" /> -->
    <task:annotation-driven executor="asyncExecutor"/>
    <task:executor id="asyncExecutor" pool-size="10" /> 
       
    <context:component-scan base-package="com.intervalintl.test" />  
          
          
</beans>                
